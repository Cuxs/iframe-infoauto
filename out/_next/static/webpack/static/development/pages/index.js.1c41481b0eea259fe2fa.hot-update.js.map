{"version":3,"file":"static/webpack/static/development/pages/index.js.1c41481b0eea259fe2fa.hot-update.js","sources":["webpack:///./helpers/index.js"],"sourcesContent":["import {each} from 'lodash';\nimport format from 'format-number';\nexport const customFetch = (url, method,token, body, contentType = 'application/json', ) => {\n  const options = {\n    headers: {\n      'Content-Type': contentType,\n      Accept: 'application/json',\n    },\n    method,\n  };\n  if (token) {\n    options.headers.Authorization = `Bearer ${token}`;\n  }\n  if (body) {\n    options.body = JSON.stringify(body);\n  }\n  return fetch(url, options)\n    .then(async (response) => {\n      if (!response.ok) {\n        const resp = await response.json();\n        console.error('Error completo: ', resp);\n        const { message } = resp;\n        return Promise.reject(new Error(`OcurriÃ³ un error en la ruta ${url}: ${JSON.stringify(resp.errors) || message}`));\n      }\n      return response.json();\n    })\n    .then(responseData => responseData)\n    .catch(e => Promise.reject(e));\n};\n\nexport const prepareArraySelect = (array, rowValue, rowLabel) => {\n  const newArray = [];\n\n  each(array, (item) => {\n    const objectItem = {};\n    objectItem.value = item[rowValue];\n    objectItem.label = item[rowLabel];\n    newArray.push(objectItem);\n  });\n  return newArray;\n};\n\nexport const thousands = (number, decimals, decPoint = ',', thousandsSep = '.') => (format({ round: decimals, integerSeparator: thousandsSep, decimal: ',' })(number));\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAUA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}